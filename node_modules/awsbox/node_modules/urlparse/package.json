{
  "author": {
    "name": "Lloyd Hilaiel",
    "email": "lloyd@hilaiel.com",
    "url": "http://lloyd.io"
  },
  "name": "urlparse",
  "description": "URL parsing, validation, normalization, and matching",
  "version": "0.0.1",
  "homepage": "https://github.com/lloyd/urlparse.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/lloyd/urlparse.js.git"
  },
  "main": "urlparse.js",
  "engines": {
    "node": ">=0.4.7"
  },
  "dependencies": {},
  "devDependencies": {},
  "scripts": {
    "test": "npm install nodeunit && nodeunit test.js"
  },
  "readme": "A simple and focused javascript library which supports basic URL parsing\nand 'url prefix' testing.\n\nThe first feature of urlmatch is its ability to parse a url into components:\n\n    console.log(URLParse(\"http://google.com/\"));\n    {\n        \"directory\": \"/\",\n        \"path\": \"/\",\n        \"relative\": \"/\",\n        \"host\": \"google.com\",\n        \"authority\": \"google.com\",\n        \"scheme\": \"http\",\n        \"source\": \"http://google.com/\"\n    }\n\nurlmatch can also validate urls:\n\n    $ URLParse(\"httpe://www.google.com/\").validate();\n    Error: invalid url: unsupported scheme: httpe\n\ncan also normalize urls:\n\n    $ URLParse(\"http://www.google.com:80/foo/../bar/\").normalize();\n    http://www.google.com/bar/\n\nAnd finally, urlmatch can combine all of these features to support\nrobust url prefix matching:\n\n    $ URLParse(\"http://doma.in/appscope/\").contains(\"http://doma.in/appscope/somepath/../../attack.html\");\n    false\n    $ URLParse(\"http://doma.in/appscope/\").contains(\"http://doma.in/appscope/somepath/../not_attack.html\");\n    true\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/lloyd/urlparse.js/issues"
  },
  "_id": "urlparse@0.0.1",
  "_from": "urlparse@0.0.1"
}
