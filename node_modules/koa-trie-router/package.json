{
  "name": "koa-trie-router",
  "description": "Trie-routing for Koa",
  "version": "1.0.3",
  "author": {
    "name": "Jonathan Ong",
    "email": "me@jongleberry.com",
    "url": "http://jongleberry.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/koajs/trie-router.git"
  },
  "bugs": {
    "url": "https://github.com/koajs/trie-router/issues"
  },
  "dependencies": {
    "routington": "~0.1.1",
    "methods": "~0.1.0",
    "koa-compose": "~2.1.0"
  },
  "devDependencies": {
    "koa": "koajs/koa",
    "mocha": "*",
    "should": "*",
    "supertest": "*"
  },
  "scripts": {
    "test": "make test;"
  },
  "engines": {
    "node": ">= 0.11.4"
  },
  "readme": "# Koa Trie Router [![Build Status](https://travis-ci.org/koajs/trie-router.png)](https://travis-ci.org/koajs/trie-router)\n\n[Trie](http://en.wikipedia.org/wiki/Trie) routing for Koa based on [routington](https://github.com/jonathanong/routington).\n\n## Features\n\n- `OPTIONS` support\n- `405 Method Not Allowed` support\n- `501 Not Implemented` support\n\nRoutes are generally orthogonal, so the order of definition generally doesn't matter.\nSee [routington](https://github.com/jonathanong/routington) for more details.\n\n## Installation\n\n```js\nvar app = require('koa')()\napp.use(require('koa-trie-router')(app))\n\napp.route('/')\n.get(function* (next) {\n  this.body = 'homepage'\n})\n\napp.post('/images', function* (next) {\n  var image = yield* this.request.buffer('25mb')\n})\n```\n\n## API\n\n### this.assertImplementsMethod()\n\nChecks if the server implements a particular method and throws a `501` error otherwise.\nThis is not middleware, so you would have to use it in your own middleware.\n\n```js\napp.use(myCustomErrorHandler)\n\napp.use(function* (next) {\n  this.request.assertImplementsMethod() // throws otherwise\n  yield next\n})\n```\n\n### app.use(app.router)\n\nLike Express, all routes belong to a single middleware.\nUnlike Express, `app.router` is not implicitly mounted.\nIf you do not do `app.use(app.router)` ever,\nrouting will never work.\n\n### app.route(paths)\\[method\\]\\(middleware...\\)\n\n`paths` can be a nested stack of string paths:\n\n```js\napp.route('/one', [\n  '/two',\n  ['/three', '/four']\n])\n```\n\nYou can then chain `[method](middleware...)` calls.\n\n```js\napp.route('/')\n.get(function* (next) {\n\n})\n.post(function* (next) {\n\n})\n.patch(function* (next) {\n\n})\n```\n\n### app\\[method\\]\\(paths, middleware...\\)\n\nSimilar to above, but you define `paths` as the first argument:\n\n```js\napp.get([\n  '/one',\n  '/two'\n], function* (next) {\n\n})\n```\n\n### this.params\n\n`this.params` will be defined with any matched parameters.\n\n```js\napp.get('/user/:name', function* (next) {\n  var name = this.params.name\n  var user = yield User.get(name)\n  yield next\n})\n```\n\n### Path Definitions\n\nFor path definitions, see [routington](https://github.com/jonathanong/routington).\n\n## License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013 Jonathan Ong me@jongleberry.com\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/koajs/trie-router",
  "_id": "koa-trie-router@1.0.3",
  "dist": {
    "shasum": "e428fa84dae30b3efa226fc1daa7c3a0bf69b943"
  },
  "_from": "https://registry.npmjs.org/koa-trie-router/-/koa-trie-router-1.0.3.tgz",
  "_resolved": "https://registry.npmjs.org/koa-trie-router/-/koa-trie-router-1.0.3.tgz"
}
